/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core.GUI;

import core.Library.Borrower;
import core.Library.Item;
import core.Library.Reservation;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author krest
 */
public class reserveItems extends javax.swing.JFrame
{

    DataAccessor.MySQLAccessor accessor;
    ArrayList <Item> itemsList;

    /**
     * Creates new form reserveItems
     */
    public reserveItems()
    {
        initComponents();
        
        accessor = new DataAccessor.MySQLAccessor();

        //Populate items Table
        itemsList = accessor.getItems();
        DefaultTableModel model = (DefaultTableModel)itemsTable.getModel();
        Object[] row = new Object[5];
        for(int i = 0; i<itemsList.size(); i++){
            row[0] = itemsList.get(i).getId();
            row[1] = itemsList.get(i).getTitle();
            row[2] = itemsList.get(i).getItemType();
            row[3] = itemsList.get(i).getCreator();
            row[4] = itemsList.get(i).getRentalDays();
            model.addRow(row);
        }
        
    }
    
     private String getItemIDFromTable(){
        int row = itemsTable.getSelectedRow();
        return String.valueOf(itemsTable.getValueAt(row, 0));
     }
     


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        reserveIDTextField = new javax.swing.JTextField();
        borrowerIdTextField1 = new javax.swing.JTextField();
        reserveItemButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("Fill the text fields to add a new Reservation.");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Reserve ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Borrower ID:");

        borrowerIdTextField1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                borrowerIdTextField1ActionPerformed(evt);
            }
        });

        reserveItemButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reserveItemButton.setText("Reserve Item");
        reserveItemButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        reserveItemButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                reserveItemButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("Back");
        backButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                backButtonActionPerformed(evt);
            }
        });

        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Item Id", "Title", "Item Type", "Creator", "Rental Days"
            }
        ));
        jScrollPane1.setViewportView(itemsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(borrowerIdTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(61, 61, 61)
                                .addComponent(reserveIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(reserveItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(reserveIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borrowerIdTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(72, 72, 72)
                .addComponent(reserveItemButton)
                .addGap(26, 26, 26)
                .addComponent(backButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void borrowerIdTextField1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_borrowerIdTextField1ActionPerformed
    {//GEN-HEADEREND:event_borrowerIdTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_borrowerIdTextField1ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_backButtonActionPerformed
    {//GEN-HEADEREND:event_backButtonActionPerformed
        this.dispose();
        new Services().setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void reserveItemButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_reserveItemButtonActionPerformed
    {//GEN-HEADEREND:event_reserveItemButtonActionPerformed
        if (!isAValidBorrower()){
                    JOptionPane.showMessageDialog(null, "Borrower ID not found in the system.", "Can not Add Reservation", JOptionPane.INFORMATION_MESSAGE);
                    return;
        }
        if (doesReserveIDExist()){
                    JOptionPane.showMessageDialog(null, "Reserve ID already exists. Please choose a new one.", "Can not Add Reservation", JOptionPane.INFORMATION_MESSAGE);
                    return;
        }
        if (!isItemSelected()){
                    JOptionPane.showMessageDialog(null, "Please select an Item to add.", "Can not Add Reservation", JOptionPane.INFORMATION_MESSAGE);
                    return;
        }
        if (hasBorrowerReachedMaximumLimit()){
                    JOptionPane.showMessageDialog(null, "You have reached your maximum reservation limit of 2.", "Can not Add Reservation", JOptionPane.INFORMATION_MESSAGE);
                    return;
        }
        
        //String itemID = getItemIDFromTable();
        //ArrayList <Reservation> reserveList = accessor.getReservationList();
        //ArrayList <Loan> loanList = accessor.getLoanList();
        
        Reservation reservation = new Reservation();
        
        String reserveId = reserveIDTextField.getText();
        String borrowerId = borrowerIdTextField1.getText();
        
         if (reserveId.isEmpty())
        { 
            JOptionPane.showMessageDialog(null, "Please Enter a Valid reserve Id.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        reservation.setItemID(getItemIDFromTable());
        reservation.setReserveID(reserveId);
        reservation.setBorrowerID(borrowerId);
        reservation.setReservedDate(new Date());
        accessor.AddReservation(reservation);
        
        JOptionPane.showMessageDialog(null, "Reservation accepted!", "Alert", JOptionPane.INFORMATION_MESSAGE);

         //empty textfields
        reserveIDTextField.setText(" ");
        borrowerIdTextField1.setText(" ");    
        
    }//GEN-LAST:event_reserveItemButtonActionPerformed
        private boolean isAValidBorrower(){
        ArrayList <Borrower> borrowers = accessor.GetBorrowerList();
        for (Borrower b : borrowers){
            if (b.getBorrowerId().matches(borrowerIdTextField1.getText())){
                return true;
            }
        }
        return false;
    }
    
    private boolean doesReserveIDExist(){
        ArrayList <Reservation> reservation = accessor.getReservationList();
        for (Reservation r : reservation){
            if (r.getReserveID().matches(reserveIDTextField.getText())){
                return true;
            }
        }
        return false;
    }
    
    private boolean isItemSelected(){
       if( itemsTable.getSelectedRowCount() == 0){
           return false;
       }else{
           return true;
       }
    }
    
    private boolean hasBorrowerReachedMaximumLimit(){
        String borrowerID = borrowerIdTextField1.getText();
        ArrayList <Reservation> reservation = accessor.getReservationList();
        int counter = 0;
        for (Reservation r : reservation){
            if (r.getBorrowerID().matches(borrowerID)){
                counter ++;
            }
        }
        if (counter >= 5){
            return true;
        }else{
            return false;
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(reserveItems.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(reserveItems.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(reserveItems.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(reserveItems.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new reserveItems().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField borrowerIdTextField1;
    private javax.swing.JTable itemsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField reserveIDTextField;
    private javax.swing.JButton reserveItemButton;
    // End of variables declaration//GEN-END:variables
}
