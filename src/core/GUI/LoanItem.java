/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core.GUI;

import core.Library.Borrower;
import core.Library.Item;
import core.Library.Loan;
import static java.lang.Integer.parseInt;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author krest
 */
public class LoanItem extends javax.swing.JFrame
{
    DataAccessor.MySQLAccessor accessor;
    ArrayList <Item> itemsList;
    

    /**
     * Creates new form LoanBook
     */
    public LoanItem()
    {
        initComponents();
        
         accessor = new DataAccessor.MySQLAccessor();

        //Populate items Table
        itemsList = accessor.getItems();
        DefaultTableModel model = (DefaultTableModel)itemsTable.getModel();
        Object[] row = new Object[5];
        for(int i = 0; i<itemsList.size(); i++){
            row[0] = itemsList.get(i).getId();
            row[1] = itemsList.get(i).getTitle();
            row[2] = itemsList.get(i).getItemType();
            row[3] = itemsList.get(i).getCreator();
            row[4] = itemsList.get(i).getRentalDays();
            model.addRow(row);
        }
    }
    
    private String getItemIDFromTable(){
        int row = itemsTable.getSelectedRow();
        return String.valueOf(itemsTable.getValueAt(row, 0));
    }
    
    private int getRentalDayFromTable(){
        int row = itemsTable.getSelectedRow();
        int rentDay = parseInt(itemsTable.getModel().getValueAt(row, 4).toString());
        return rentDay;
    }
    
    public Date fromLdt(LocalDateTime ldt) {
    ZonedDateTime zdt = ZonedDateTime.of(ldt, ZoneId.systemDefault());
    GregorianCalendar cal = GregorianCalendar.from(zdt);
    return cal.getTime();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        loanIdTextField = new javax.swing.JTextField();
        borrowerIdTextField = new javax.swing.JTextField();
        addLoanButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Loan ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Borrower ID:");

        addLoanButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addLoanButton.setText("Add Loan");
        addLoanButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addLoanButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addLoanButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("Back");
        backButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                backButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("Fill the text fields to add a new Loan.");

        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Item Id", "Title", "Item Type", "Creator", "Rental Days"
            }
        ));
        itemsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(itemsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(borrowerIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(87, 87, 87)
                                .addComponent(loanIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addLoanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(loanIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(borrowerIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(addLoanButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(backButton)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_backButtonActionPerformed
    {//GEN-HEADEREND:event_backButtonActionPerformed
        new Services().setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void addLoanButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addLoanButtonActionPerformed
    {//GEN-HEADEREND:event_addLoanButtonActionPerformed
        if (!isAValidBorrower()){
                    JOptionPane.showMessageDialog(null, "Borrower ID not found in the system.", "Can not Add Loan", JOptionPane.INFORMATION_MESSAGE);
                    return;
        }
        if (doesLoanIDExist()){
                    JOptionPane.showMessageDialog(null, "Loan ID already exists. Please choose a new one.", "Can not Add Loan", JOptionPane.INFORMATION_MESSAGE);
                    return;
        }
        if (!isItemSelected()){
                    JOptionPane.showMessageDialog(null, "Please select an Item to add.", "Can not Add Loan", JOptionPane.INFORMATION_MESSAGE);
                    return;
        }
        if (hasBorrowerReachedMaximumLimit()){
                    JOptionPane.showMessageDialog(null, "You have reached your maximum borrowing limit of 2.", "Can not Add Loan", JOptionPane.INFORMATION_MESSAGE);
                    return;
        }
        int rd = getRentalDayFromTable();
        Date dateToday = new Date();
	Calendar c = Calendar.getInstance();
        c.setTime(dateToday);
	c.add(Calendar.DAY_OF_MONTH, rd);  
         Date futureDate = c.getTime();
        Loan loan = new Loan();
        
        String loanId = loanIdTextField.getText();
        String borrowerId = borrowerIdTextField.getText();
         if (loanId.isEmpty())
        { 
            JOptionPane.showMessageDialog(null, "Please Enter a Valid loan Id.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
       
        loan.setItemID(getItemIDFromTable());
        loan.setLoanId(loanId);
        loan.setBorrowerId(borrowerId);
        loan.setStartDate(dateToday);
        loan.setReturnDate(futureDate);
        accessor.AddLoan(loan);
        
        JOptionPane.showMessageDialog(null, "Loan approved!", "Alert", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_addLoanButtonActionPerformed

    private boolean isAValidBorrower(){
        ArrayList <Borrower> borrowers = accessor.GetBorrowerList();
        for (Borrower b : borrowers){
            if (b.getBorrowerId().matches(borrowerIdTextField.getText())){
                return true;
            }
        }
        return false;
    }
    
    private boolean doesLoanIDExist(){
        ArrayList <Loan> loans = accessor.getLoanList();
        for (Loan l : loans){
            if (l.getLoanId().matches(loanIdTextField.getText())){
                return true;
            }
        }
        return false;
    }
    
    private boolean isItemSelected(){
       if( itemsTable.getSelectedRowCount() == 0){
           return false;
       }else{
           return true;
       }
    }
    
    private boolean hasBorrowerReachedMaximumLimit(){
        String borrowerID = borrowerIdTextField.getText();
        ArrayList <Loan> loans = accessor.getLoanList();
        int counter = 0;
        for (Loan l : loans){
            if (l.getBorrowerId().matches(borrowerID)){
                counter ++;
            }
        }
        if (counter >= 5){
            return true;
        }else{
            return false;
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(LoanItem.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(LoanItem.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(LoanItem.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(LoanItem.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new LoanItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addLoanButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField borrowerIdTextField;
    private javax.swing.JTable itemsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField loanIdTextField;
    // End of variables declaration//GEN-END:variables
}
